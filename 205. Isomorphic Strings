class Solution {    
public:
    bool isIsomorphic(string s, string t) {
        if(s.size() != t.size()){
            return false;
        }
        std::array<int,256> hash1 = {0};
         // first hash is used to map charcaters of string s to corresponding characters of string t (s[i] to t[i])

        std::array<bool,256> hash2 = {false};
//hash 2 is used to update the characters of t[i] that it is mapped        
        for(int i = 0; i<s.size(); i++){
            if(hash1[s[i]] == 0){
                if(hash2[t[i]] == true){
                    return false;
                }
                hash1[s[i]] = t[i];
                hash2[t[i]] = true;
            }
            else if(hash1[s[i]] != t[i]){
                return false;
            }
        }
        return true;
    }
};