/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        ListNode* ans = new ListNode(-1);
        ListNode* newans = ans;
        ListNode* curr1 = list1;
        ListNode* curr2 = list2;
        while(curr1 != NULL || curr2 != NULL){
            if(curr1 == NULL || (curr2 != NULL && curr2->val<curr1->val )){
                newans -> next = curr2;
                curr2 = curr2-> next;
            }
            else{
                newans -> next = curr1;
                curr1 = curr1 -> next;
            }
            newans = newans -> next;
        }

        return ans -> next;
    }
};
