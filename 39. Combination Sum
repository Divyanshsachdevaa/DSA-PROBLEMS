class Solution {
private:
    void solve(vector<vector<int>>& vt, vector<int>& candidates, int& target, vector<int>& ansvector, int& index, int sum){
        
        //base case
        if(sum == target){
            vt.push_back(ansvector);
            return ;
        }

        if(sum > target){
            return ;
        }

        for(int i = index; i<candidates.size(); i++){
            ansvector.push_back(candidates[i]);
            solve(vt, candidates, target, ansvector, i, sum + candidates[i]);
            //BACKTRACKING
            ansvector.pop_back();
        }
    }
public:
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        int index = 0;
        vector<vector<int>> vt;
        vector<int> ansvector;
        int sum = 0;
        solve(vt, candidates, target, ansvector, index, sum);
        return vt;
    }
};