/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(root == NULL){
            return 0;
        }

        int leftheight = maxDepth(root -> left);
        int rightheight = maxDepth(root -> right);
        return max(leftheight, rightheight) + 1;
    }

    int diameterOfBinaryTree(TreeNode* root) {
        if(root == NULL){
            return 0;
        }

        int leftpart = diameterOfBinaryTree(root -> left); 
        int rightpart = diameterOfBinaryTree(root -> right);
        int sum = maxDepth(root -> left) + maxDepth(root -> right);
        return max(sum,max(leftpart,rightpart));
    }
};