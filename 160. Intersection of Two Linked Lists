/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
private:
    int getlength(ListNode *head){
        ListNode* temp = head;
        int count=0;
        while(temp != NULL){
            temp = temp -> next;
            count++;
        }
        return count;
    }    
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

        ListNode* curr1 = headA;
        ListNode* curr2 = headB;
        int l1 = getlength(headA);
        int l2 = getlength(headB);

        int diff = abs(l1-l2);
        while(diff != 0){
            if(l1>l2){
                curr1 = curr1 -> next;
            }
            else{
                curr2 = curr2 -> next;
            }
            diff--;
        }
        while(curr1 != NULL && curr2 != NULL){
            if(curr1 == curr2){
                return curr1;

            }
            else if(curr1 == NULL || curr2 == NULL){
                return NULL;
            }
            curr1 = curr1 -> next;
            curr2 = curr2 -> next;

        }
        return NULL;
    }
};
